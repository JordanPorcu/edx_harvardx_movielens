pred_m_g <- mu + validation %>% left_join(m_g,by="genres") %>% pull(b_m_g)
rmse_m_g <- rmse(pred_m_gtest)
rmse_m_g <- rmse(pred_m_g,test)
user <- edx %>% left_join(m,by="movieId") %>% group_by(userId) %>% summarize(b_u = mean(rating - b_m - mu))
predict <- validation %>% left_join(m,by="movieId") %>% left_join(u, by="userId") %>% mutate(pred = mu + b_m + b_u) %>% pull(pred)
predict
rmse(pred,test)
rmse(predict,test)
user
g
predict2 <- validation %>% left_join(m,by="movieId") %>% left_join(u, by="userId") %<% left_join(g,by="genres") %>% mutate(pred=mu+b_m+b_u+b_g) %>% pull(pred)
predict2 <- validation %>% left_join(m,by="movieId") %>% left_join(u, by="userId") %>% left_join(g,by="genres") %>% mutate(pred=mu+b_m+b_u+b_g) %>% pull(pred)
rmse(predict2,test)
movie_avgs
movie_avgs <- edx %>%
group_by(movieId) %>%
summarize(b_i = mean(rating - mu))
predicted_ratings <- mu + validation %>%
left_join(movie_avgs, by='movieId') %>%
pull(b_i)
model_1_rmse <- RMSE(predicted_ratings, validation$rating)
user_avgs <- edx %>%
left_join(movie_avgs, by='movieId') %>%
group_by(userId) %>%
summarize(b_u = mean(rating - mu - b_i))
user_avgs <- edx %>%
left_join(movie_avgs, by='movieId') %>%
group_by(userId) %>%
summarize(b_u = mean(rating - mu - b_i))
user_avgs <- edx %>%
left_join(movie_avgs, by='movieId') %>%
group_by(userId) %>%
summarize(b_u = mean(rating - mu - b_i)) %>%
mutate(pred = mu + b_i + b_u) %>%
pull(pred)
user_avgs <- edx %>%
left_join(movie_avgs, by='movieId') %>%
group_by(userId) %>%
summarize(b_u = mean(rating - mu - b_i)) %>%
mutate(pred = mu + b_i + b_u) %>%
pull(pred)
movie_avgs <- edx %>%
group_by(movieId) %>%
summarize(b_i = mean(rating - mu))
predicted_ratings <- mu + validation %>%
left_join(movie_avgs, by='movieId') %>%
pull(b_i)
model_1_rmse <- RMSE(predicted_ratings, validation$rating)
user_avgs <- edx %>%
left_join(movie_avgs, by='movieId') %>%
group_by(userId) %>%
summarize(b_u = mean(rating - mu - b_i))
user_avgs <- edx %>%
left_join(movie_avgs, by='movieId') %>%
group_by(userId) %>%
summarize(b_u = mean(rating - mu - b_i)) %>%
mutate(pred = mu + b_i + b_u) %>%
pull(pred)
user_avgs <- edx %>%
left_join(movie_avgs, by='movieId') %>%
group_by(userId) %>%
summarize(b_u = mean(rating - mu - b_i)) %>% mutate(pred = mu + b_i + b_u) %>%
pull(pred)
edx %>%
left_join(movie_avgs, by='movieId') %>%
group_by(userId)
edx %>%
left_join(movie_avgs, by='movieId') %>%
group_by(userId) %>%
summarize(b_u = mean(rating - mu - b_i))
edx %>%
left_join(movie_avgs, by='movieId') %>%
group_by(userId) %>%
summarize(b_u = mean(rating - mu - b_i)) %>% mutate(pred = mu + b_i + b_u)
predicted_ratings <- validation%>%
left_join(movie_avgs, by='movieId') %>%
left_join(user_avgs, by='userId') %>%
mutate(pred = mu + b_i + b_u) %>%
pull(pred)
model_2_rmse <- RMSE(predicted_ratings, validation$rating)
avg <- edx %>% summarize(b = mean(rating-mu))
avg %>% qplot(b,geom="histogram")
head(avg)
qplot(avg$b,geom="histogram")
qplot(avg$b,geom="histogram",bins=30)
qplot(avg$b,)
qplot(avg$b,geom="histogram",bins=30,binwidth=10)
genres_avgs <- edx %>% left_join(movie_avgs,by="movieId") %>% group_by(userId) %>% left_join(user_avgs,by="userId") %>% group_by(genres) %>% summarize(b_g = mean(rating-mu-b_i-b_u))
genres_avgs %>% qplot(b_g,geom="histogram",bins=30)
genres_avgs%>% qplot(b_g, geom ="histogram", bins = 30, data = ., color = I("black"))
std(genres_avgs$b_g)
sd(genres_avgs$b_g)
pred <- validation %>% left_join(movie_avgs,by="movieId") %>% left_join(user_avgs,by="userId") %>% left_join(genres_avgs,by="genres") %>% mutate(pred=mu+b_i+b_u+b_g) %>% pull(pred)
rmse(pred,test)
lambdas <- seq(0, 10, 1)
rmses <- sapply(lambdas, function(l){
mu <- mean(edx$rating)
b_i <- edx %>%
group_by(movieId) %>%
summarize(b_i = sum(rating - mu)/(n()+l))
b_u <- edx %>%
left_join(b_i, by="movieId") %>%
group_by(userId) %>%
summarize(b_u = sum(rating - b_i - mu)/(n()+l))
b_g <- edx %>%
left_join(b_i, by="movieId") %>%
group_by(userId) %>%
left_join(b_u, by="userId") %>%
group_by(genres) %>%
summarize(b_g = sum(rating-b_i-b_u-mu)/(n()+l))
predict <-
validation %>%
left_join(b_i, by = "movieId") %>%
left_join(b_u, by = "userId") %>%
left_join(b_g, by = "genres")
mutate(pred = mu + b_i + b_u + b_g) %>%
pull(pred)
return(RMSE(predict, test))
})
rmses <- sapply(lambdas, function(l){
mu <- mean(edx$rating)
b_i <- edx %>%
group_by(movieId) %>%
summarize(b_i = sum(rating - mu)/(n()+l))
b_u <- edx %>%
left_join(b_i, by="movieId") %>%
group_by(userId) %>%
summarize(b_u = sum(rating - b_i - mu)/(n()+l))
b_g <- edx %>%
left_join(b_i, by="movieId") %>%
group_by(userId) %>%
left_join(b_u, by="userId") %>%
group_by(genres) %>%
summarize(b_g = sum(rating-b_i-b_u-mu)/(n()+l))
predict <-
validation %>%
left_join(b_i, by = "movieId") %>%
left_join(b_u, by = "userId") %>%
left_join(b_g, by = "genres") %>%
mutate(pred = mu + b_i + b_u + b_g) %>%
pull(pred)
return(RMSE(predict, test))
})
qplot(lambdas,pred)
pred
lambdas
qplot(lambdas,rmses)
min(rmses)
0.8649857 > min(rmses)
lambdas <- seq(0, 10, 0.5)
rmses <- sapply(lambdas, function(l){
mu <- mean(edx$rating)
b_i <- edx %>%
group_by(movieId) %>%
summarize(b_i = sum(rating - mu)/(n()+l))
b_u <- edx %>%
left_join(b_i, by="movieId") %>%
group_by(userId) %>%
summarize(b_u = sum(rating - b_i - mu)/(n()+l))
b_g <- edx %>%
left_join(b_i, by="movieId") %>%
group_by(userId) %>%
left_join(b_u, by="userId") %>%
group_by(genres) %>%
summarize(b_g = sum(rating-b_i-b_u-mu)/(n()+l))
predict <-
validation %>%
left_join(b_i, by = "movieId") %>%
left_join(b_u, by = "userId") %>%
left_join(b_g, by = "genres") %>%
mutate(pred = mu + b_i + b_u + b_g) %>%
pull(pred)
return(RMSE(predict, test))
})
qplot(lambdas,rmses)
min(rmses)
ts <- edx %>% group_by(timestamp) %>% summarize(b_t = mean(rating-mu))
lambdas <- seq(0, 15)
rmses <- sapply(lambdas, function(l){
mu <- mean(edx$rating)
b_i <- edx %>%
group_by(movieId) %>%
summarize(b_i = sum(rating - mu)/(n()+l))
b_u <- edx %>%
left_join(b_i, by="movieId") %>%
group_by(userId) %>%
summarize(b_u = sum(rating - b_i - mu)/(n()+l))
b_g <- edx %>%
left_join(b_i, by="movieId") %>%
group_by(userId) %>%
left_join(b_u, by="userId") %>%
group_by(genres) %>%
summarize(b_g = sum(rating-b_i-b_u-mu)/(n()+l))
predict <-
validation %>%
left_join(b_i, by = "movieId") %>%
left_join(b_u, by = "userId") %>%
left_join(b_g, by = "genres") %>%
mutate(pred = mu + b_i + b_u + b_g) %>%
pull(pred)
return(RMSE(predict, test))
})
qplot(lambdas,rmses)
rmses1 <- sapply(lambdas, function(l){
mu <- mean(edx$rating)
b_i <- edx %>%
group_by(movieId) %>%
summarize(b_i = sum(rating - mu)/(n()+l))
b_u <- edx %>%
left_join(b_i, by="movieId") %>%
group_by(userId) %>%
summarize(b_u = sum(rating - b_i - mu)/(n()+l))
predict <-
validation %>%
left_join(b_i, by = "movieId") %>%
left_join(b_u, by = "userId") %>%
mutate(pred = mu + b_i + b_u) %>%
pull(pred)
return(RMSE(predict, test))
})
rmses2 <- sapply(lambdas, function(l){
mu <- mean(edx$rating)
b_u <- edx %>%
group_by(userId) %>%
summarize(b_u = sum(rating - mu)/(n()+l))
b_i <- edx %>%
left_join(b_u, by="userId") %>%
group_by(movieId) %>%
summarize(b_i = sum(rating - b_u - mu)/(n()+l))
predict <-
validation %>%
left_join(b_u, by = "userId") %>%
left_join(b_i, by = "movieId") %>%
mutate(pred = mu + b_i + b_u) %>%
pull(pred)
return(RMSE(predict, test))
})
min(rmses1)
min(rmses2)
rmse(pred,edx$rating)
len(edx$rating)/len(test)
dim(edx$rating)[0]/dim(test)[0]
dim(edx$rating)[1]/dim(test)[1]
dim(edx$rating)[1]
dim(edx$rating)[0]
dim(edx$rating)
dim(edx)
dim(test)
dim(validation)
9000061/999993
mu
The first model, as previously said, is simply a model that gives the rating mean value to the predicted rating. The mathematical expression for such a model is written as :
$$ \hat{y} = \mu + \epsilon $$
with :
- $\hat{y}$ : the predicted rating
- $\mu$ : the mean value of training set ratings (defined by `mu <- mean(edx$rating))`
- $\epsilon$ :
print(c("rmse_naive : " + rmse(mu,validation$rating)))
print(c("rmse_naive : " , rmse(mu,validation$rating)))
print(c("rmse_naive : ", rmse(mu,validation$rating)))
print(c("rmse_naive : "), rmse(mu,validation$rating))
print("rmse_naive : ", rmse(mu,validation$rating))
print("rmse_naive : ",rmse(mu,validation$rating))
"rmse_naive : ",rmse(mu,validation$rating)
"rmse_naive :  + ,rmse(mu,validation$rating)
"rmse_naive :  + rmse(mu,validation$rating)
rmse(mu,validation$rating)
rmse_naive <- rmse(mu,validation$rating)
rmse_naive
bias_movie <- edx %>% group_by(movieId) %>% summarize(b = rating-mu)
bias_user <- edx %>% group_by(userId) %>% summarize(b = rating-mu)
bias_genres <- edx %>% group_by(genres) %>% summarize(b = rating-mu)
bias_movie
sd(bias_genres$b)
sd(bias_movie$b)
sd(bias_user$b)
bias_genres
mean(bias_genres$b)
mean(bias_movie$b)
mean(bias_user$b)
n_distinct(edx$genres)
edx %>%
count(movieId) %>%
ggplot(aes(n)) +
geom_histogram(bins=50,color="white",fill="blue") +
scale_x_log10() +
xlab("Number of ratings") +
ylab("Number of movies") +
ggtitle("Number of ratings (log10 scaled) per the number of movies")
mu = mean(edx$rating)
edx %>%
ggplot(aes(x=rating)) +
geom_histogram(bins=10,color="white",fill="green") +
geom_vline(xintercept = mu,linetype = "longdash") +
xlab("Rating") +
ylab("Number of ratings") +
ggtitle("Distribution of ratings") +
scale_x_discrete(limits=c(seq(0.5,5,0.5)))
edx %>%
count(movieId) %>%
ggplot(aes(n)) +
geom_histogram(bins=50,color="white",fill="blue") +
xlab("Number of ratings") +
ylab("Number of movies") +
ggtitle("Number of movies per the number of ratings")
movie <- edx %>% group_by(movieId) %>% summarize(b_movie = mean(rating - mu))
pred_movie <- mu + validation %>% left_join(movie, by='movieId') %>%  pull(b_movie)
rmse_movie <- rmse(pred_movie,validation$rating)
rmse_movie
head(edx)
genres_avgs
movie %>% ggplot(aes(b_movie)) + geom_histogram(bins=10)
movie %>% ggplot(aes(b_movie)) + geom_histogram(bins=50,color="white",fill="blue")
movie %>% ggplot(aes(b_movie)) + geom_histogram(bins=50,color="white",fill="blue") + geom_vline(xintercept =0)
movie %>% ggplot(aes(b_movie)) + geom_histogram(bins=50,color="white",fill="blue") + geom_vline(xintercept = 0) + ggtitle("Distribution of b_movie")
user %>% ggplot(aes(b_user)) + geom_histogram(bins=50,color="white",fill="red") + geom_vline(xintercept = 0) + ggtitle("Distribution of b_user")
b_movie <- edx %>% group_by(movieId) %>% summarize(b_movie = mean(rating - mu))
b_movie %>% ggplot(aes(b_movie)) + geom_histogram(bins=50,color="white",fill="blue") + geom_vline(xintercept = 0) + ggtitle("Distribution of b_movie")
rmse_movie
b_user <- edx %>% left_join(b_movie, by='movieId') %>% group_by(userId) %>% summarize(b_user = mean(rating - mu - b_movie))
b_user %>% ggplot(aes(b_user)) + geom_histogram(bins=50,color="white",fill="red") + geom_vline(xintercept = 0) + ggtitle("Distribution of b_user")
sd(b_user$b_user)
sd(b_movie$b_movie)
edx %>% group_by(userId) %>% summarize(test=rating-mu) %>% ggplot(aes(test)) + geom_histogram(bins=50)
edx %>% group_by(userId) %>% summarize(test=mean(rating-mu)) %>% ggplot(aes(test)) + geom_histogram(bins=50)
edx %>% group_by(userId) %>% summarize(test=mean(rating-mu)) %>% sd(test)
edx %>% group_by(userId) %>% summarize(test=mean(rating-mu)))
edx %>% group_by(userId) %>% summarize(test=mean(rating-mu))
edx %>% group_by(userId) %>% summarize(test=mean(rating-mu)) %>% sd()
edx %>% group_by(userId) %>% summarize(test=mean(rating-mu)) %>% sd(test)
test <- edx %>% group_by(userId) %>% summarize(test=mean(rating-mu))
sd(test$test)
pred_user <- validation %>% left_join(b_movie,by="movieId") %>% left_join(b_user,by="userId") %>% summarize(pred = mu+b_user+b_movie) %>% pull(pred)
rmse_user <- rmse(pred_user,validation$rating)
rmse_user
b_genres <- edx %>% left_join(b_movie, by='movieId') %>% group_by(userId) %>% left_join(b_user,by="userId") %>% group_by(genres) %>% summarize(b_genres = mean(rating - mu - b_movie - b_user))
b_movie %>% ggplot(aes(b_movie)) + geom_histogram(bins=50,color="white",fill="cyan") + geom_vline(xintercept = 0) + ggtitle("Distribution of b_movie")
b_user %>% ggplot(aes(b_user)) + geom_histogram(bins=50,color="white",fill="blue") + geom_vline(xintercept = 0) + ggtitle("Distribution of b_user")
b_genres %>% ggplot(aes(b_genres)) + geom_histogram(bins=50,color="white",fill="magenta") + geom_vline(xintercept = 0) + ggtitle("Distribution of b_genres")
sd(b_genres$b_genres)
b_genres %>% ggplot(aes(b_genres)) + geom_histogram(bins=50,color="white",fill="purple") + geom_vline(xintercept = 0) + ggtitle("Distribution of b_genres")
sd(validation$rating)
biases <- c("Movie effect","Movie + user effect", "Movie + user + genres effect")
sd <- c(sd(b_movie$b_movie),sd(b_user$b_user),sd(b_genres$b_genres))
sd_df <- data_frame(Bias = biases, SD = sd) %>% knitr::kable()
sd_df
rmse_genres
pred_genres <- validation %>% left_join(b_movie,by="movieId") %>% left_join(b_user,by="userId") %>% left_join(b_genres, by="genres") %>% summmarize(pred=mu+b_movie+b_user+b_genres) %% pull(pred)
pred_genres <- validation %>% left_join(b_movie,by="movieId") %>% left_join(b_user,by="userId") %>% left_join(b_genres, by="genres") %>% summarize(pred=mu+b_movie+b_user+b_genres) %% pull(pred)
pred_genres <- validation %>% left_join(b_movie,by="movieId") %>% left_join(b_user,by="userId") %>% left_join(b_genres, by="genres") %>% summarize(pred=mu+b_movie+b_user+b_genres) %>% pull(pred)
rmse_genres <- rmse(pred_genres,validation$rating)
rmse_genres
list_of_lambdas <- seq(0,15,0.5)
rmses_lambdas <- sapply(list_of_lambdas,function(lambda){
# same as previous model building but mean() divides the sum by n(), so we we divide by lambda +n() instead to add the lambda weight
b_movie <- edx %>% group_by(movieId) %>% summarize(b_movie = sum(rating - mu)/(lambda+n()))
b_user <- edx %>% left_join(b_movie, by='movieId') %>% group_by(userId) %>% summarize(b_user = sum(rating - mu - b_movie)/(lambda+n()))
})
b_genres <- edx %>% left_join(b_movie, by='movieId') %>% group_by(userId) %>% left_join(b_user,by="userId") %>% group_by(genres) %>% summarize(b_genres = sum(rating - mu - b_movie - b_user)/(lambda+n()))
list_of_lambdas <- seq(0,15,0.5)
rmses_lambdas <- sapply(list_of_lambdas,function(lambda){
# same as previous model building but mean() divides the sum by n(), so we we divide by lambda +n() instead to add the lambda weight
b_movie <- edx %>% group_by(movieId) %>% summarize(b_movie = sum(rating - mu)/(lambda+n()))
b_user <- edx %>% left_join(b_movie, by='movieId') %>% group_by(userId) %>% summarize(b_user = sum(rating - mu - b_movie)/(lambda+n()))
b_genres <- edx %>% left_join(b_movie, by='movieId') %>% group_by(userId) %>% left_join(b_user,by="userId") %>% group_by(genres) %>% summarize(b_genres = sum(rating - mu - b_movie - b_user)/(lambda+n()))
prediction <- validation %>% left_join(b_movie,by="movieId") %>% left_join(b_user,by="userId") %>% left_join(b_genres, by="genres") %>% summarize(pred=mu+b_movie+b_user+b_genres) %>% pull(pred)
return(rmse(predcion,validation$rating))
})
list_of_lambdas <- seq(0,15,0.5)
rmses_lambdas <- sapply(list_of_lambdas,function(lambda){
# same as previous model building but mean() divides the sum by n(), so we we divide by lambda +n() instead to add the lambda weight
b_movie <- edx %>% group_by(movieId) %>% summarize(b_movie = sum(rating - mu)/(lambda+n()))
b_user <- edx %>% left_join(b_movie, by='movieId') %>% group_by(userId) %>% summarize(b_user = sum(rating - mu - b_movie)/(lambda+n()))
b_genres <- edx %>% left_join(b_movie, by='movieId') %>% group_by(userId) %>% left_join(b_user,by="userId") %>% group_by(genres) %>% summarize(b_genres = sum(rating - mu - b_movie - b_user)/(lambda+n()))
prediction <- validation %>% left_join(b_movie,by="movieId") %>% left_join(b_user,by="userId") %>% left_join(b_genres, by="genres") %>% summarize(pred=mu+b_movie+b_user+b_genres) %>% pull(pred)
return(rmse(prediction,validation$rating))
})
rmses_lambdas %>% ggplot(aes()) + geom_point()
ggplot(aes(x=list_of_lambdas,y=rmses_lambdas)) + geom_point()
ggplot(x=list_of_lambdas,y=rmses_lambdas) + geom_point()
rmse_lambda_df <- data_frame("lambda" = list_of_lambdas, "rmse" = rmses_lambdas)
rmse_lambda_df
rmse_lambda_df %>% ggplot(aes(lambda,rmse)) + geom_point()
rmse_lambda_df %>% ggplot(aes(lambda,rmse)) + geom_line()
rmse_lambda_df %>% ggplot(aes(lambda,rmse)) + geom_line() + geom_vline(xintercept = list_of_lambdas[which.min(rmses_lambdas)])
rmse_lambda_df %>% ggplot(aes(lambda,rmse)) + geom_line(color="blue") + geom_vline(xintercept = list_of_lambdas[which.min(rmses_lambdas)])
rmse_lambda_df %>% ggplot(aes(lambda,rmse)) + geom_line(color="blue") + geom_vline(xintercept = list_of_lambdas[which.min(rmses_lambdas)],linetype="dashed")
rmse_lambda_df %>% ggplot(aes(lambda,rmse)) + geom_line(color="blue") + geom_vline(xintercept = list_of_lambdas[which.min(rmses_lambdas)],linetype="dashed") + geom_hline(yintercept = min(rmses_lambdas))
rmse_lambda_df %>% ggplot(aes(lambda,rmse)) + geom_line(color="blue") + geom_vline(xintercept = list_of_lambdas[which.min(rmses_lambdas)],linetype="dashed") + geom_hline(yintercept = min(rmses_lambdas),linetype="dashed")
rmse_lambda_df <- data_frame("lambda" = list_of_lambdas, "rmse" = rmses_lambdas)
rmse_lambda_df %>% ggplot(aes(lambda,rmse)) + geom_line(color="blue") + geom_vline(xintercept = list_of_lambdas[which.min(rmses_lambdas)],linetype="dashed") + geom_hline(yintercept = min(rmses_lambdas),linetype="dashed")
rmse_lambda_df <- data_frame("lambda" = list_of_lambdas, "rmse" = rmses_lambdas)
rmse_lambda_df %>% ggplot(aes(lambda,rmse)) + geom_line(color="blue") + geom_vline(xintercept = list_of_lambdas[which.min(rmses_lambdas)],linetype="dashed") + geom_hline(yintercept = min(rmses_lambdas),linetype="dashed")
rmse_lambda_df <- data_frame("lambda" = list_of_lambdas, "rmse" = rmses_lambdas)
rmse_lambda_df %>%
ggplot(aes(lambda,rmse)) +
geom_point() +
(color="blue") + geom_vline(xintercept = list_of_lambdas[which.min(rmses_lambdas)],linetype="dashed") +
geom_hline(yintercept = min(rmses_lambdas),linetype="dashed") +
ggtitle("rmses per lambdas")
rmse_lambda_df <- data_frame("lambda" = list_of_lambdas, "rmse" = rmses_lambdas)
rmse_lambda_df %>%
ggplot(aes(lambda,rmse)) +
geom_point()
geom_line(color="blue") +
geom_vline(xintercept = list_of_lambdas[which.min(rmses_lambdas)],linetype="dashed") +   geom_hline(yintercept = min(rmses_lambdas),linetype="dashed") +
ggtitle("rmse per lambdas")
rmse_lambda_df <- data_frame("lambda" = list_of_lambdas, "rmse" = rmses_lambdas)
rmse_lambda_df %>%
ggplot(aes(lambda,rmse)) +
geom_point() +
geom_line(color="blue") +
geom_vline(xintercept = list_of_lambdas[which.min(rmses_lambdas)],linetype="dashed") +   geom_hline(yintercept = min(rmses_lambdas),linetype="dashed") +
ggtitle("rmse per lambdas")
rmse_lambda_df <- data_frame("lambda" = list_of_lambdas, "rmse" = rmses_lambdas)
rmse_lambda_df %>%
ggplot(aes(lambda,rmse)) +
geom_point(color="darkblue") +
geom_line(color="blue") +
geom_vline(xintercept = list_of_lambdas[which.min(rmses_lambdas)],linetype="dashed") +   geom_hline(yintercept = min(rmses_lambdas),linetype="dashed") +
ggtitle("rmse per lambdas")
best_lambda <- list_of_lambdas[which.min(rmses_lambdas)]
best_lambda
best_lambda <- list_of_lambdas[which.min(rmses_lambdas)]
best_lambda
rmse_lambda_df %>% filter(lambda==best_lambda) %>% pull(rmse)
best_lambda <- list_of_lambdas[which.min(rmses_lambdas)]
best_rmse <- rmse_lambda_df %>% filter(lambda==best_lambda) %>% pull(rmse)
final_model_result <- data_frame("Best lambda"=best_lambda, "Corresponding rmse"=best_rmse)
final_model_result
best_lambda <- list_of_lambdas[which.min(rmses_lambdas)]
best_rmse <- rmse_lambda_df %>% filter(lambda==best_lambda) %>% pull(rmse)
final_model_result <- data_frame("Best lambda"=best_lambda, "Corresponding rmse"=best_rmse) %>% knitr::kable()
final_model_result
names = c("Naive","Movie effect","Movie and user effect","Movie, user and genres effect","Optimized final model")
rmses_final = c(rmse_naive,rmse_naive,rmse_user,rmse_genres,best_rmse)
results_df <- data_frame("Model" = names, "RMSE" = rmses_final) %>% knitr::kable()
results_df
best_rmse/4.5
names = c("Naive","Movie only","Movie and user","Movie, user and genres","Optimized final model")
rmses_final = c(rmse_naive,rmse_naive,rmse_user,rmse_genres,best_rmse)
results_df <- data_frame("Model" = names, "RMSE" = rmses_final) %>% knitr::kable()
results_df
lifecycle::last_lifecycle_warnings()
names = c("Naive","Movie only","Movie and user","Movie, user and genres","Optimized final model")
rmses_final = c(rmse_naive,rmse_naive,rmse_user,rmse_genres,best_rmse)
results_df <- tibble("Model" = names, "RMSE" = rmses_final) %>% knitr::kable()
results_df
names = c("Naive","Movie only","Movie and user","Movie, user and genres","Optimized final model")
rmses_final = c(rmse_naive,rmse_naive,rmse_user,rmse_genres,best_rmse)
results_df <- tibble("Model" = names, "RMSE" = rmses_final)
results_df
names = c("Naive","Movie only","Movie and user","Movie, user and genres","Optimized final model")
rmses_final = c(rmse_naive,rmse_naive,rmse_user,rmse_genres,best_rmse)
results_df <- tibble("Model" = names, "RMSE" = rmses_final) %>% knitr::kable()
results_df
best_lambda <- list_of_lambdas[which.min(rmses_lambdas)]
best_rmse <- rmse_lambda_df %>% filter(lambda==best_lambda) %>% pull(rmse)
final_model_result <- tibble("Best lambda"=best_lambda, "Corresponding rmse"=best_rmse) %>% knitr::kable()
final_model_result
rmse_lambda_df <- tibble("lambda" = list_of_lambdas, "rmse" = rmses_lambdas)
rmse_lambda_df %>%
ggplot(aes(lambda,rmse)) +
geom_point(color="darkblue") +
geom_line(color="blue") +
geom_vline(xintercept = list_of_lambdas[which.min(rmses_lambdas)],linetype="dashed") +   geom_hline(yintercept = min(rmses_lambdas),linetype="dashed") +
ggtitle("rmse per lambdas")
mu = mean(edx$rating)
edx %>%
ggplot(aes(x=rating)) +
geom_histogram(bins=10,color="white",fill="green") +
geom_vline(xintercept = mu,linetype = "longdash") +
xlab("Rating") +
ylab("Number of ratings") +
ggtitle("Distribution of ratings") +
scale_x_discrete(limits=factor(seq(0.5,5,0.5)))
mu = mean(edx$rating)
edx %>%
ggplot(aes(x=rating)) +
geom_histogram(bins=10,color="white",fill="green") +
geom_vline(xintercept = mu,linetype = "longdash") +
xlab("Rating") +
ylab("Number of ratings") +
ggtitle("Distribution of ratings") +
scale_x_discrete(limits=factor(seq(0.5,5,0.5)))
mu = mean(edx$rating)
edx %>%
ggplot(aes(x=rating)) +
geom_histogram(bins=10,color="white",fill="green") +
geom_vline(xintercept = mu,linetype = "longdash") +
xlab("Rating") +
ylab("Number of ratings") +
ggtitle("Distribution of ratings") +
scale_x_discrete(limits=c(seq(0.5,5,0.5)))
mu = mean(edx$rating)
edx %>%
ggplot(aes(x=rating)) +
geom_histogram(bins=10,color="white",fill="green") +
geom_vline(xintercept = mu,linetype = "longdash") +
xlab("Rating") +
ylab("Number of ratings") +
ggtitle("Distribution of ratings") +
scale_x_continuous(limits=c(seq(0.5,5,0.5)))
mu = mean(edx$rating)
edx %>%
ggplot(aes(x=rating)) +
geom_histogram(bins=10,color="white",fill="green") +
geom_vline(xintercept = mu,linetype = "longdash") +
xlab("Rating") +
ylab("Number of ratings") +
ggtitle("Distribution of ratings")
setwd("C:/Users/jorda/Projects/harvardx_data_science/project_movie_reco")
